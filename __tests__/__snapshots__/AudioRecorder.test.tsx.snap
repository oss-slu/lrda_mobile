// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AudioContainer renders with audio 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#fff",
      "marginBottom": 10,
      "padding": 10,
      "width": "100%",
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "width": "100%",
      }
    }
  >
    <Text
      allowFontScaling={false}
      selectable={false}
      style={
        [
          {
            "color": "#111111",
            "fontSize": 60,
          },
          undefined,
          {
            "fontFamily": "ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          {},
        ]
      }
    >
      
    </Text>
    <Text
      style={
        {
          "fontFamily": "Inter",
          "fontSize": 24,
          "fontWeight": "600",
        }
      }
    >
      Recordings
    </Text>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": "red",
              "fontSize": 45,
            },
            undefined,
            {
              "fontFamily": "ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>
  <RCTScrollView
    ListEmptyComponent={
      <Text
        style={
          {
            "color": "#888",
            "fontSize": 16,
            "marginTop": 20,
          }
        }
      >
        No recordings available
      </Text>
    }
    contentContainerStyle={
      {
        "alignItems": "center",
        "width": "100%",
      }
    }
    data={
      [
        {
          "name": "test",
          "uri": "test",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    stickyHeaderIndices={[]}
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "alignItems": "center",
              "backgroundColor": "#f0f2f3",
              "borderRadius": 5,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginBottom": 10,
              "padding": 10,
              "width": "90%",
            }
          }
        >
          <Text
            style={
              {
                "color": "#333",
                "fontSize": 16,
                "fontWeight": "500",
              }
            }
          >
            test
          </Text>
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#111111",
                    "fontSize": 30,
                  },
                  undefined,
                  {
                    "fontFamily": "ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`AudioContainer renders without crashing 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#fff",
      "marginBottom": 10,
      "padding": 10,
      "width": "100%",
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "width": "100%",
      }
    }
  >
    <Text
      allowFontScaling={false}
      selectable={false}
      style={
        [
          {
            "color": "#111111",
            "fontSize": 60,
          },
          undefined,
          {
            "fontFamily": "ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          {},
        ]
      }
    >
      
    </Text>
    <Text
      style={
        {
          "fontFamily": "Inter",
          "fontSize": 24,
          "fontWeight": "600",
        }
      }
    >
      Recordings
    </Text>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": "red",
              "fontSize": 45,
            },
            undefined,
            {
              "fontFamily": "ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>
  <RCTScrollView
    ListEmptyComponent={
      <Text
        style={
          {
            "color": "#888",
            "fontSize": 16,
            "marginTop": 20,
          }
        }
      >
        No recordings available
      </Text>
    }
    contentContainerStyle={
      {
        "alignItems": "center",
        "width": "100%",
      }
    }
    data={[]}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    stickyHeaderIndices={[]}
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <Text
        onLayout={[Function]}
        style={
          {
            "color": "#888",
            "fontSize": 16,
            "marginTop": 20,
          }
        }
      >
        No recordings available
      </Text>
    </View>
  </RCTScrollView>
</View>
`;
