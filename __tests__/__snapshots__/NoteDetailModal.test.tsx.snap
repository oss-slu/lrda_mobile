// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NoteDetailModal renders without crashing 1`] = `
<Modal
  animationType="slide"
  hardwareAccelerated={false}
  transparent={false}
  visible={true}
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#ccc",
        "borderRadius": 25,
        "justifyContent": "center",
        "left": 20,
        "opacity": 1,
        "padding": 5,
        "position": "absolute",
        "top": 50,
        "zIndex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#ccc",
          "borderRadius": 20,
          "height": 40,
          "justifyContent": "center",
          "width": 40,
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": "#000000",
              "fontSize": 30,
            },
            undefined,
            {
              "fontFamily": "ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>
  <View
    style={
      [
        {
          "backgroundColor": "#f5f5f5",
          "borderTopColor": "#ddd",
          "borderTopWidth": 2,
          "flex": 1,
          "padding": 10,
          "paddingTop": 100,
        },
        {
          "height": "100%",
        },
      ]
    }
  >
    <Text
      style={
        {
          "color": "#333",
          "fontFamily": "Inter",
          "fontSize": 22,
          "fontWeight": "bold",
          "marginBottom": 5,
          "textAlign": "center",
        }
      }
    >
      Test Note Title
    </Text>
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 15,
          "paddingVertical": 10,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
          }
        }
      >
        <Text
          allowFontScaling={false}
          selectable={false}
          style={
            [
              {
                "color": "#000000",
                "fontSize": 18,
              },
              undefined,
              {
                "fontFamily": "ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              {},
            ]
          }
        >
          
        </Text>
        <Text
          style={
            {
              "fontFamily": "Inter",
            }
          }
          testID="loadingDotsStatic"
        >
          ...
        </Text>
      </View>
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "flex-end",
          }
        }
      >
        <Text
          allowFontScaling={false}
          selectable={false}
          style={
            [
              {
                "color": "#000000",
                "fontSize": 18,
              },
              undefined,
              {
                "fontFamily": "ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              {},
            ]
          }
        >
          
        </Text>
        <Text
          style={
            {
              "color": "#333",
              "fontFamily": "Inter",
              "fontSize": 16,
              "marginLeft": 5,
            }
          }
        >
          2023-09-10
        </Text>
      </View>
    </View>
    <View
      style={
        {
          "alignSelf": "center",
          "backgroundColor": "#ddd",
          "height": 2,
          "marginVertical": 10,
          "width": "100%",
        }
      }
    />
    <RCTScrollView>
      <View>
        <View
          style={
            [
              {},
              undefined,
              undefined,
            ]
          }
          testID="html"
        >
          <View
            style={
              [
                {},
                undefined,
                undefined,
              ]
            }
            testID="body"
          >
            <View
              style={
                [
                  {},
                  undefined,
                  undefined,
                ]
              }
              testID="div"
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "marginVertical": 10,
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "height": 400,
                      "justifyContent": "center",
                      "position": "relative",
                      "width": 400,
                    }
                  }
                >
                  <RCTImageView
                    accessibilityLabel="Test Image"
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    internal_analyticTag={null}
                    onError={[Function]}
                    onLoadEnd={[Function]}
                    resizeMode="contain"
                    source={
                      [
                        {
                          "uri": "https://example.com/image1.jpg",
                        },
                      ]
                    }
                    style={
                      [
                        {
                          "height": undefined,
                          "width": undefined,
                        },
                        {
                          "overflow": "hidden",
                        },
                        [
                          {
                            "height": "100%",
                            "resizeMode": "contain",
                            "width": "100%",
                          },
                          {
                            "opacity": 0,
                          },
                        ],
                      ]
                    }
                    testID="bufferingImage"
                  />
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "backgroundColor": "rgba(255,255,255,0.7)",
                        "bottom": 0,
                        "justifyContent": "center",
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <ActivityIndicator
                      size="large"
                      testID="loadingIndicator"
                    />
                  </View>
                  <View
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      {
                        "bottom": 0,
                        "left": 0,
                        "opacity": 1,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                    testID="imageButton"
                  />
                </View>
              </View>
            </View>
            <View
              style={
                [
                  {},
                  undefined,
                  undefined,
                ]
              }
              testID="div"
            >
              <View
                style={
                  {
                    "alignSelf": "center",
                    "marginVertical": 20,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "backgroundColor": "#000",
                        "justifyContent": "center",
                        "position": "relative",
                      },
                      {
                        "height": 401.12994350282486,
                        "width": 710,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      [
                        {
                          "overflow": "hidden",
                          "pointerEvents": "box-none",
                        },
                        {
                          "height": "100%",
                          "width": "100%",
                        },
                      ]
                    }
                  >
                    <ViewManagerAdapter_ExpoVideoView
                      onError={[Function]}
                      onFullscreenUpdate={[Function]}
                      onLoad={[Function]}
                      onLoadEnd={[Function]}
                      onLoadStart={[Function]}
                      onReadyForDisplay={[Function]}
                      onStatusUpdate={[Function]}
                      resizeMode="mock"
                      source={
                        {
                          "headers": undefined,
                          "overridingExtension": null,
                          "uri": "https://example.com/video.mp4",
                        }
                      }
                      status={
                        {
                          "isLooping": false,
                          "shouldPlay": false,
                        }
                      }
                      style={
                        [
                          {
                            "bottom": 0,
                            "left": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          },
                          undefined,
                        ]
                      }
                      videoStyle={
                        [
                          {
                            "bottom": 0,
                            "left": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          },
                          undefined,
                        ]
                      }
                    />
                  </View>
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "bottom": 0,
                        "justifyContent": "center",
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <ActivityIndicator
                      size="large"
                      testID="videoLoadingIndicator"
                    />
                  </View>
                  <View
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      {
                        "bottom": 0,
                        "left": 0,
                        "opacity": 1,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                    testID="videoButton"
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        [
                          {
                            "color": "white",
                            "fontSize": 50,
                          },
                          {
                            "alignSelf": "center",
                            "marginTop": 70,
                          },
                          {
                            "fontFamily": "ionicons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</Modal>
`;
